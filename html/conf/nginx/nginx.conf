user nginx;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

    include       mime.types;
    default_type  application/octet-stream;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  65;
    server_tokens      off;

    log_format  main_timed  '[$time_local] "$request" $status $body_bytes_sent "$http_referer"';

    #access_log        off;
    access_log         /dev/stdout main_timed;
    error_log          /dev/stderr;

    server {
        listen       [::]:80 default_server;
        listen       80 default_server;
        server_name  _;
        index index.html index.htm;
        root         /var/www/public;
        client_max_body_size 32M;

        location / {
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 200;
            }
            try_files $uri $uri/ /index.html;
        }

        location ~* ^.+\.(log|sqlite)$ {
            return 404;
        }

        location ~ /\.ht {
            return 404;
        }

        location ~* ^.+\.(ico|jpg|gif|png|css|js|svg|eot|ttf|woff|woff2|otf)$ {
            log_not_found off;
            expires 7d;
            etag on;
        }

        gzip on;
        gzip_comp_level 3;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_types
            text/plain
            text/css
            text/javascript
            text/xml
            application/javascript
            application/json
            application/xml
            application/rss+xml;
    }

    #include conf.d/*.conf;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}
